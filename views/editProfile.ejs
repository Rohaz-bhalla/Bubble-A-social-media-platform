<%- include('partials/header', { title: "Edit Profile" }) %>

<!-- Bootstrap CSS (for modal styling) -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
<!-- Cropper.js CSS -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css">

<div class="container mt-4">
    <div class="card">
        <div class="card-body">
            <h2 class="card-title">Edit Profile</h2>

            <% if (error) { %>
                <div class="alert alert-danger"><%= error %></div>
            <% } %>

            <form id="editProfileForm" action="/profile/edit" method="POST" enctype="multipart/form-data">
                <!-- Profile Picture Upload Section -->
                <div class="mb-3 text-center">
                    <label class="form-label">Profile Picture</label>
                    <br>
                    <img id="profilePicPreview" 
                        src="<%= user.profilePic ? user.profilePic + '?v=' + Date.now() : '/images/default-avatar.png' %>" 
                        class="profile-pic-preview rounded-circle border"
                        alt="Profile Picture">
                    <br>
                    <!-- Hidden File Input -->
                    <input type="file" id="profilePicInput" name="profilePic" class="d-none" accept="image/*">
                    <button type="button" id="changeProfilePicBtn" class="btn btn-outline-primary mt-2">
                        Change Profile Picture
                    </button>
                </div>
                <!-- Username -->
                <div class="mb-3">
                    <label class="form-label">Username</label>
                    <input type="text" name="username" value="<%= user.username %>" class="form-control">
                </div>
                <button type="submit" class="btn btn-success">Save Changes</button>
                <a href="/profile" class="btn btn-secondary">Cancel</a>
                <input type="hidden" id="croppedImageData" name="croppedImageData">
            </form>
        </div>
    </div>
</div>

<!-- Cropper.js Modal -->
<div class="modal fade" id="cropperModal" tabindex="-1" aria-labelledby="cropperModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Adjust Your Profile Picture</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body text-center">
                <div class="cropper-container">
                    <img id="cropperImage" class="img-fluid">
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button id="cropImage" type="button" class="btn btn-primary">Crop & Save</button>
            </div>
        </div>
    </div>
</div>

<%- include('partials/footer') %>


<!-- Bootstrap & Cropper.js Scripts -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>

<script>
    let cropper;
    const profilePicInput = document.getElementById('profilePicInput');
    const profilePicPreview = document.getElementById('profilePicPreview');
    const cropperImage = document.getElementById('cropperImage');
    const cropImageButton = document.getElementById('cropImage');
    const croppedImageData = document.getElementById('croppedImageData');
    const changeProfilePicBtn = document.getElementById('changeProfilePicBtn');

    changeProfilePicBtn.addEventListener('click', () => profilePicInput.click());

    profilePicInput.addEventListener('change', function(event) {
        const file = event.target.files[0];
        if (file) {
            const reader = new FileReader();
            reader.onload = function(e) {
                cropperImage.src = e.target.result;
                if (cropper) cropper.destroy();
                new bootstrap.Modal(document.getElementById('cropperModal')).show();
                cropper = new Cropper(cropperImage, {
                    aspectRatio: 1,
                    viewMode: 1,
                    autoCropArea: 0.8,
                    movable: true,
                    zoomable: true
                });
            };
            reader.readAsDataURL(file);
        }
    });

    cropImageButton.addEventListener('click', function() {
        if (cropper) {
            const canvas = cropper.getCroppedCanvas({ width: 300, height: 300 });
            canvas.toBlob((blob) => {
                const fileReader = new FileReader();
                fileReader.readAsDataURL(blob);
                fileReader.onloadend = function() {
                    croppedImageData.value = fileReader.result;
                    profilePicPreview.src = fileReader.result;
                    new bootstrap.Modal(document.getElementById('cropperModal')).hide();
                };
            }, 'image/png');
        }
    });

    document.getElementById("editProfileForm").addEventListener("submit", function(event) {
        event.preventDefault();
        const formData = new FormData(this);
        fetch('/profile/edit', {
            method: 'POST',
            body: formData
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                profilePicPreview.src = data.profilePic + "?v=" + new Date().getTime();
                alert("Profile updated successfully!");
                window.location.reload();
            } else {
                alert("Error updating profile: " + data.error);
            }
        })
        .catch(err => {
            alert("Something went wrong!");
            console.error(err);
        });
    });
</script>
